---------------------------------------------------------------------------
-- DROP TABLE SEGMENT
---------------------------------------------------------------------------
drop table customer;
drop table hire;
drop table equipment;
drop table sales;
drop table category;


-- 1. Duplication Problems (Exploration)

---------- Between records ----------

----- ADDRESS TABLE -----

SELECT ADDRESS_ID, COUNT(*)
FROM MONEQUIP.ADDRESS
GROUP BY ADDRESS_ID
HAVING COUNT(*) > 1;


----- CATEGORY TABLE -----

SELECT CATEGORY_ID, COUNT(*)
FROM MONEQUIP.CATEGORY
GROUP BY CATEGORY_ID
HAVING COUNT(*) > 1;


----- CUSTOMER TABLE -----

SELECT CUSTOMER_ID, COUNT(*)
FROM MONEQUIP.CUSTOMER
GROUP BY CUSTOMER_ID
HAVING COUNT(*) > 1;   -----> Problem 1


----- CUSTOMER_TYPE TABLE -----

SELECT CUSTOMER_TYPE_ID, COUNT(*)
FROM MONEQUIP.CUSTOMER_TYPE
GROUP BY CUSTOMER_TYPE_ID
HAVING COUNT(*) > 1;


----- EQUIPMENT TABLE -----

SELECT EQUIPMENT_ID, COUNT(*)
FROM MONEQUIP.EQUIPMENT
GROUP BY EQUIPMENT_ID
HAVING COUNT(*) > 1;


----- HIRE TABLE -----

SELECT HIRE_ID, COUNT(*)
FROM MONEQUIP.HIRE
GROUP BY HIRE_ID
HAVING COUNT(*) > 1;


----- SALES TABLE -----

SELECT SALES_ID, COUNT(*)
FROM MONEQUIP.SALES
GROUP BY SALES_ID
HAVING COUNT(*) > 1;


----- STAFF TABLE -----

SELECT STAFF_ID, COUNT(*)
FROM MONEQUIP.STAFF
GROUP BY STAFF_ID
HAVING COUNT(*) > 1;


-- Solution for Problem 1

CREATE TABLE CUSTOMER AS
    SELECT DISTINCT *
    FROM MONEQUIP.CUSTOMER;


----- Between attributes -----

DESCRIBE MONEQUIP.ADDRESS;
DESCRIBE MONEQUIP.CATEGORY;
DESCRIBE MONEQUIP.CUSTOMER;
DESCRIBE MONEQUIP.CUSTOMER_TYPE;
DESCRIBE MONEQUIP.EQUIPMENT;
DESCRIBE MONEQUIP.HIRE;
DESCRIBE MONEQUIP.SALES;
DESCRIBE MONEQUIP.STAFF;


----- Between tables -----

SELECT COUNT(*)
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'CUSTOMER';

DESCRIBE MONEQUIP.CUSTOMER;

SELECT COUNT(*)
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'CUSTOMER_TYPE';

DESCRIBE MONEQUIP.CUSTOMER_TYPE;


-- 2. Relationship Problems

---------- Check invalid FK values ----------

----- CUSTOMER TABLE -----

SELECT *
FROM MONEQUIP.CUSTOMER
WHERE CUSTOMER_TYPE_ID NOT IN
	(SELECT CUSTOMER_TYPE_ID
 	FROM MONEQUIP.CUSTOMER_TYPE);
    
SELECT *
FROM MONEQUIP.CUSTOMER
WHERE ADDRESS_ID NOT IN
	(SELECT ADDRESS_ID
 	FROM MONEQUIP.ADDRESS);
	 

----- EQUIPMENT TABLE -----

SELECT *
FROM MONEQUIP.EQUIPMENT
WHERE CATEGORY_ID NOT IN
	(SELECT CATEGORY_ID
 	FROM MONEQUIP.CATEGORY);
    

----- HIRE TABLE -----

SELECT *
FROM MONEQUIP.HIRE
WHERE EQUIPMENT_ID NOT IN
	(SELECT EQUIPMENT_ID
 	FROM MONEQUIP.EQUIPMENT);   -----> Problem 2

SELECT *
FROM MONEQUIP.HIRE
WHERE CUSTOMER_ID NOT IN
	(SELECT CUSTOMER_ID
 	FROM MONEQUIP.CUSTOMER);   -----> Problem 3
	 
SELECT *
FROM MONEQUIP.HIRE
WHERE STAFF_ID NOT IN
	(SELECT STAFF_ID
 	FROM MONEQUIP.STAFF);   -----> Problem 4
	 

----- SALES TABLE -----

SELECT *
FROM MONEQUIP.SALES
WHERE EQUIPMENT_ID NOT IN
	(SELECT EQUIPMENT_ID
 	FROM MONEQUIP.EQUIPMENT);

SELECT *
FROM MONEQUIP.SALES
WHERE CUSTOMER_ID NOT IN
	(SELECT CUSTOMER_ID
 	FROM MONEQUIP.CUSTOMER);
	 
SELECT *
FROM MONEQUIP.SALES
WHERE STAFF_ID NOT IN
	(SELECT STAFF_ID
 	FROM MONEQUIP.STAFF);
     

-- Solution for Problem 2

CREATE TABLE HIRE AS
    SELECT * 
    FROM MONEQUIP.HIRE;

UPDATE HIRE
SET EQUIPMENT_ID = NULL
WHERE EQUIPMENT_ID NOT IN
    (SELECT EQUIPMENT_ID
     FROM MONEQUIP.EQUIPMENT);

     
-- Solution for Problem 3

UPDATE HIRE
SET CUSTOMER_ID = NULL
WHERE CUSTOMER_ID NOT IN
    (SELECT CUSTOMER_ID
     FROM MONEQUIP.CUSTOMER);


-- Solution for Problem 4

UPDATE HIRE
SET STAFF_ID = NULL
WHERE STAFF_ID NOT IN
    (SELECT STAFF_ID
     FROM MONEQUIP.STAFF);


-- Solution for Problem 2 & 3 & 4

DELETE FROM HIRE
WHERE EQUIPMENT_ID IS NULL OR CUSTOMER_ID IS NULL OR STAFF_ID IS NULL;


-- 3(a). Inconsistent Values (DISTINCT - check at record level)
-- 3(b). Incorrect Values

----- ADDRESS TABLE ----- 

SELECT DISTINCT SUBURB FROM MONEQUIP.ADDRESS ORDER BY SUBURB;
SELECT DISTINCT STATE FROM MONEQUIP.ADDRESS ORDER BY STATE;


----- CATEGORY TABLE ----- 

SELECT DISTINCT CATEGORY_DESCRIPTION FROM MONEQUIP.CATEGORY ORDER BY CATEGORY_DESCRIPTION;


----- CUSTOMER TABLE -----

SELECT DISTINCT GENDER FROM MONEQUIP.CUSTOMER;


----- CUSTOMER_TYPE TABLE -----

SELECT DISTINCT DESCRIPTION FROM MONEQUIP.CUSTOMER_TYPE ORDER BY DESCRIPTION;


----- EQUIPMENT TABLE -----

SELECT DISTINCT EQUIPMENT_NAME FROM MONEQUIP.EQUIPMENT ORDER BY EQUIPMENT_NAME;
SELECT DISTINCT EQUIPMENT_PRICE FROM MONEQUIP.EQUIPMENT;
SELECT DISTINCT MANUFACTURE_YEAR FROM MONEQUIP.EQUIPMENT;
SELECT DISTINCT MANUFACTURER FROM MONEQUIP.EQUIPMENT ORDER BY MANUFACTURER;   -----> Problem 5

-- Solution for Problem 5:

CREATE TABLE EQUIPMENT AS
    SELECT * 
    FROM MONEQUIP.EQUIPMENT;

UPDATE EQUIPMENT
SET MANUFACTURER = 'Hitachi'
WHERE MANUFACTURER = 'HITACHI';


----- HIRE TABLE -----

SELECT COUNT(*) FROM MONEQUIP.HIRE WHERE QUANTITY < 0;
SELECT COUNT(*) FROM MONEQUIP.HIRE WHERE UNIT_HIRE_PRICE < 0;
SELECT COUNT(*) FROM MONEQUIP.HIRE WHERE TOTAL_HIRE_PRICE < 0;   -----> Problem 6
SELECT * FROM MONEQUIP.HIRE WHERE TO_CHAR(START_DATE, 'YYYY') > 2023 OR TO_CHAR(END_DATE, 'YYYY') > 2023;   -----> Problem 7
SELECT COUNT(*) FROM MONEQUIP.HIRE WHERE START_DATE > END_DATE;   -----> Problem 8
SELECT * FROM MONEQUIP.HIRE WHERE (END_DATE - START_DATE) * QUANTITY * UNIT_HIRE_PRICE <> TOTAL_HIRE_PRICE AND START_DATE < END_DATE;   -----> Problem 9
SELECT * FROM MONEQUIP.HIRE WHERE 0.5 * UNIT_HIRE_PRICE * QUANTITY <> TOTAL_HIRE_PRICE AND START_DATE = END_DATE;   -----> Problem 10


-- Solution for Problem 6

UPDATE HIRE
SET TOTAL_HIRE_PRICE = (END_DATE - START_DATE) * UNIT_HIRE_PRICE * QUANTITY
WHERE TOTAL_HIRE_PRICE < 0 AND END_DATE > START_DATE;

UPDATE HIRE
SET TOTAL_HIRE_PRICE = 0.5 * UNIT_HIRE_PRICE * QUANTITY
WHERE TOTAL_HIRE_PRICE < 0 AND END_DATE = START_DATE;


-- Solution for Problem 7

DELETE FROM HIRE
WHERE TO_CHAR(START_DATE, 'YYYY') > 2023 OR TO_CHAR(END_DATE, 'YYYY') > 2023;


-- Solution for Problem 8

DELETE FROM HIRE
WHERE START_DATE > END_DATE;


-- Solution for Problem 9

UPDATE HIRE
SET TOTAL_HIRE_PRICE = (END_DATE - START_DATE) * UNIT_HIRE_PRICE * QUANTITY
WHERE (END_DATE - START_DATE) * QUANTITY * UNIT_HIRE_PRICE <> TOTAL_HIRE_PRICE AND START_DATE < END_DATE;


-- Solution for Problem 10

UPDATE HIRE
SET TOTAL_HIRE_PRICE = 0.5 * UNIT_HIRE_PRICE * QUANTITY
WHERE 0.5 * UNIT_HIRE_PRICE * QUANTITY <> TOTAL_HIRE_PRICE AND START_DATE = END_DATE;


----- SALES TABLE -----

SELECT COUNT(*) FROM MONEQUIP.SALES WHERE QUANTITY < 0;   -----> Problem 11
SELECT COUNT(*) FROM MONEQUIP.SALES WHERE UNIT_SALES_PRICE < 0;
SELECT COUNT(*) FROM MONEQUIP.SALES WHERE TOTAL_SALES_PRICE < 0;
SELECT DISTINCT QUANTITY FROM MONEQUIP.SALES;
SELECT * FROM MONEQUIP.SALES WHERE TO_CHAR(SALES_DATE, 'YYYY') > 2023;
SELECT COUNT(*) FROM MONEQUIP.SALES WHERE QUANTITY * UNIT_SALES_PRICE <> TOTAL_SALES_PRICE AND QUANTITY > 0;


-- Solution for Problem 11

CREATE TABLE SALES AS
    SELECT * FROM MONEQUIP.SALES;
    
UPDATE SALES
SET QUANTITY = TOTAL_SALES_PRICE / UNIT_SALES_PRICE
WHERE QUANTITY < 0; 


----- STAFF TABLE -----

SELECT DISTINCT GENDER FROM MONEQUIP.STAFF;
SELECT DISTINCT FIRST_NAME FROM MONEQUIP.STAFF ORDER BY FIRST_NAME;
SELECT DISTINCT LAST_NAME FROM MONEQUIP.STAFF ORDER BY LAST_NAME;
SELECT DISTINCT PHONE FROM MONEQUIP.STAFF ORDER BY PHONE;
SELECT DISTINCT EMAIL FROM MONEQUIP.STAFF ORDER BY EMAIL;
SELECT COUNT(EMAIL) FROM MONEQUIP.STAFF WHERE (EMAIL NOT LIKE '%@%') OR (EMAIL NOT LIKE '%.%');
SELECT DISTINCT COMPANY_BRANCH FROM MONEQUIP.STAFF ORDER BY COMPANY_BRANCH;


-- 4. The null value problems (Check columns with VARCHAR2 data type)

----- ADDRESS TABLE -----

DESCRIBE MONEQUIP.ADDRESS;
SELECT COUNT(*) FROM MONEQUIP.ADDRESS WHERE STREET_NAME = '';
SELECT COUNT(*) FROM MONEQUIP.ADDRESS WHERE STREET_NAME = ' ';
SELECT COUNT(*) FROM MONEQUIP.ADDRESS WHERE UPPER(STREET_NAME) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.ADDRESS WHERE SUBURB = '';
SELECT COUNT(*) FROM MONEQUIP.ADDRESS WHERE SUBURB = ' ';
SELECT COUNT(*) FROM MONEQUIP.ADDRESS WHERE UPPER(SUBURB) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.ADDRESS WHERE STATE = '';
SELECT COUNT(*) FROM MONEQUIP.ADDRESS WHERE STATE = ' ';
SELECT COUNT(*) FROM MONEQUIP.ADDRESS WHERE UPPER(STATE) = 'NULL';


----- CATEGORY TABLE -----

DESCRIBE MONEQUIP.CATEGORY;
SELECT COUNT(*) FROM MONEQUIP.CATEGORY WHERE CATEGORY_DESCRIPTION = '';
SELECT COUNT(*) FROM MONEQUIP.CATEGORY WHERE CATEGORY_DESCRIPTION = ' ';
SELECT COUNT(*) FROM MONEQUIP.CATEGORY WHERE UPPER(CATEGORY_DESCRIPTION) = 'NULL';   -----> Problem 12

-- Solution for Problem 12

CREATE TABLE CATEGORY AS
    SELECT DISTINCT *
    FROM MONEQUIP.CATEGORY;

DELETE FROM CATEGORY
WHERE UPPER(CATEGORY_DESCRIPTION) = 'NULL';

-- Delete the corresponding record(s) from EQUIPMENT
DELETE FROM EQUIPMENT
WHERE CATEGORY_ID = 
    (SELECT CATEGORY_ID
     FROM MONEQUIP.CATEGORY
     WHERE UPPER(CATEGORY_DESCRIPTION) = 'NULL');


----- CUSTOMER TABLE -----

DESCRIBE MONEQUIP.CUSTOMER;
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE NAME = '';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE NAME = ' ';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE UPPER(NAME) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE GENDER = '';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE GENDER = ' ';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE UPPER(GENDER) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE PHONE = '';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE PHONE = ' ';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE UPPER(PHONE) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE EMAIL = '';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE EMAIL = ' ';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER WHERE UPPER(EMAIL) = 'NULL';


----- CUSTOMER_TYPE TABLE -----

DESCRIBE MONEQUIP.CUSTOMER_TYPE;
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER_TYPE WHERE DESCRIPTION = '';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER_TYPE WHERE DESCRIPTION = ' ';
SELECT COUNT(*) FROM MONEQUIP.CUSTOMER_TYPE WHERE UPPER(DESCRIPTION) = 'NULL';


----- EQUIPMENT TABLE -----

DESCRIBE MONEQUIP.EQUIPMENT;
SELECT COUNT(*) FROM MONEQUIP.EQUIPMENT WHERE EQUIPMENT_NAME = '';
SELECT COUNT(*) FROM MONEQUIP.EQUIPMENT WHERE EQUIPMENT_NAME = ' ';
SELECT COUNT(*) FROM MONEQUIP.EQUIPMENT WHERE UPPER(EQUIPMENT_NAME) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.EQUIPMENT WHERE MANUFACTURER = '';
SELECT COUNT(*) FROM MONEQUIP.EQUIPMENT WHERE MANUFACTURER = ' ';
SELECT COUNT(*) FROM MONEQUIP.EQUIPMENT WHERE UPPER(MANUFACTURER) = 'NULL';


----- HIRE TABLE -----

DESCRIBE MONEQUIP.HIRE;
DESCRIBE MONEQUIP.SALES;


----- STAFF TABLE -----

DESCRIBE MONEQUIP.STAFF;
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE FIRST_NAME = '';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE FIRST_NAME = ' ';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE UPPER(FIRST_NAME) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE LAST_NAME = '';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE LAST_NAME = ' ';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE UPPER(LAST_NAME) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE GENDER = '';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE GENDER = ' ';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE UPPER(GENDER) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE PHONE = '';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE PHONE = ' ';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE UPPER(PHONE) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE EMAIL = '';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE EMAIL = ' ';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE UPPER(EMAIL) = 'NULL';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE COMPANY_BRANCH = '';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE COMPANY_BRANCH = ' ';
SELECT COUNT(*) FROM MONEQUIP.STAFF WHERE UPPER(COMPANY_BRANCH) = 'NULL';

